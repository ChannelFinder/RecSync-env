[recceiver]

# Logging detail level.  Use python logging level name.
loglevel = @RS_CFG_LOGLEVEL@

# list of broadcast address:port with comma ',' seperated.
# a broadcast address in the same subnet where RecCeiver runs : 127.255.255.255
# 
#  another broadcast address in other subnet, which iocs runs : 192.168.199.255 
#  For example, IOCs are running on
#  inet      192.168.196.68
#  netmask   255.255.252.0
#  broadcast 192.168.199.255
#  With them, IOCs can see RecCeiver broadcast within different subnets.
# 
#addrlist = 127.255.255.255:5049, 192.168.199.255:5049
addrList = @RS_ADDR_LIST@

# Listen for TCP connections on this interface and port.
# Port also used as source for UDP broadcasts.
# Default uses wildcard address and a random port.
# 45722 is the randomly selected port
# 
bind = @RS_BIND_ADDR@

# Processing chain
procs = @RS_PROCS_CHAIN@

# Time interval for sending recceiver advertisments
announceInterval = @RS_ANNOUNCE_INTERVAL@

# Idle Timeout for TCP connections.
tcptimeout = @RS_TCPTIMEOUT@

# Time to wait before commiting updates
# Doesn't effect IOC clients
commitInterval = @RS_COMMIT_INTERVAL@

# Maximum concurrent "active" clients
# to allow.
maxActive = @RS_MAXACTIVE@

# The channelFinder client is configuration information is 
# stored in channelfinderapi.conf as described in the client

[cf]
# a space-separated list of infotags to set as CF Properties
infotags = @RS_CONF_INFOTAGS@
# List environment variables that should be written as channel finder properties
#
# Comma-separated list of VARIABLE:PropertyName,
# specifying which environment VARIABLEs to pass on to the channel finder
# and defining the corresponding PropertyName
# environment_vars=ENGINEER:Engineer,EPICS_BASE:EpicsVersion,PWD:WorkingDirectory
# Turn on optional alias and recordType properties
environment_vars=@RS_CONF_ENV_VARS@
alias = @RS_CONF_ALIAS@
recordType = @RS_CONF_RECORDTYPE@
recordDesc = @RS_CONF_RECORDDESC@
# EOF
