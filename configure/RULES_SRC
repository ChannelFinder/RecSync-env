#
.DEFAULT_GOAL := help
#
#
.PHONY: help default init distclean deinit init1 init2 distclean1 distclean2

# # help is defined in 
# # https://gist.github.com/rcmachado/af3db315e31383502660
help:
	$(info --------------------------------------- )	
	$(info Make Targets)
	$(info --------------------------------------- )
	$(QUIET) awk '/^[a-zA-Z\-\_0-9]+:/ {            \
	  nb = sub( /^## /, "", helpMsg );              \
	  if(nb == 0) {                                 \
	    helpMsg = $$0;                              \
	    nb = sub( /^[^:]*:.* ## /, "", helpMsg );   \
	  }                                             \
	  if (nb)                                       \
	    print  $$1 "\t" helpMsg;                    \
	}                                               \
	{ helpMsg = $$0 }'                              \
	$(MAKEFILE_LIST) | column -ts:

#
#
default: help
#
## Clone sources : recsync and pyCFClient
init: init1 init2
#
#
# recsync
init1:
ifeq "$(INIT_SRC1)" "1"
	git clone $(RS_SRC_GITURL) $(RS_SRC_PATH)
	cd $(RS_SRC_PATH) && git checkout $(RS_SRC_TAG)
else
	$(QUIET)echo "$(RS_SRC_PATH) exists. make distclean first, if one would like to restart it."
endif
#
#
# pyCFClient
init2:
ifeq "$(INIT_SRC2)" "1"
	git clone $(PY_CF_SRC_GITURL) $(PY_CF_SRC_PATH)
	cd $(PY_CF_SRC_PATH) && git checkout $(PY_CF_SRC_TAG)
else
	$(QUIET)echo "$(PY_CF_SRC_PATH) exists. make distclean first, if one would like to restart it."
endif
#
#
deinit: distclean
#
#
## Clean sources : recsync and pyCFClient
distclean: distclean1 distclean2
#
#
distclean1:
ifneq ($(wildcard $(RS_SRC_PATH)/.*),)
	$(QUIET)echo "We've found $(RS_SRC_PATH)"
	$(QUIET)echo "Removing ....."
	$(QUIET)rm -rf $(RS_SRC_PATH)
else
	$(QUIET)echo "There is no $(RS_SRC_PATH)."
endif
#
#
distclean2:
ifneq ($(wildcard $(PY_CF_SRC_PATH)/.*),)
	$(QUIET)echo "We've found $(PY_CF_SRC_PATH)"
	$(QUIET)echo "Removing ....."
	$(QUIET)rm -rf $(PY_CF_SRC_PATH)
else
	$(QUIET)echo "There is no $(PY_CF_SRC_PATH)."
endif
#
#

