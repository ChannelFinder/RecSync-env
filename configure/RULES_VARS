VARS_EXCLUDES+=.SHELLSTATUS
VARS_EXCLUDES+=$(filter INIT_SRC%, $(.VARIABLES))
VARS_EXCLUDES+=$(filter SRC%_URL, $(.VARIABLES))
VARS_EXCLUDES+=$(filter SRC%_NAME, $(.VARIABLES))
VARS_EXCLUDES+=SITE_TEMPLATE_PATH
#VARS_EXCLUDES+=CF_%
VARS_EXCLUDES+=AS_%
VARS_EXCLUDES+=OG_%
VARS_EXCLUDES+=PS_%
VARS_EXCLUDES+=KAFKA_%
VARS_EXCLUDES+=ALARM_%
VARS_EXCLUDES+=AL_%
VARS_EXCLUDES+=AA_%
VARS_EXCLUDES+=CF_USER
VARS_EXCLUDES+=CF_SRC_URL
VARS_EXCLUDES+=CF_PRTO
VARS_EXCLUDES+=CF_URL
VARS_EXCLUDES+=CF_FULL_URL

LEVEL?=1

FILTER?=1

ifeq "$(FILTER)" "1"
SRC_VARIABLES:=$(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES)))
else
SRC_VARIABLES:=$(filter $(FILTER)%, $(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES))))
endif

SRC_VARIABLES+=CF_PROPERTIES

.PHONY : env vars header

env: vars
## Print interesting VARIABLES : also make PRINT.$(EACH_VARIABLE)
vars: _header
	$(foreach v, $(SRC_VARIABLES), $(info $(v) = $($(v)))) @#noop

_header:
	$(QUIET)echo ""
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ">>>>          Current Envrionment Variables             <<<<"
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ""

# https://www.cmcrossroads.com/article/printing-value-makefile-variable
PRINT.%:
	$(QUIET)echo $* = $($*)
	$(QUIET)echo $*\'s origin is $(origin $*)

print-%:
	$(QUIET)echo $* = $($*)
	$(QUIET)echo $*\'s origin is $(origin $*)

FORCE:

exist:
ifeq (, $(shell which tree))
	$(if $(wildcard $(RS_INSTALL_LOCATION)), @ ls -d $(RS_INSTALL_LOCATION) && find $(RS_INSTALL_LOCATION)/ -maxdepth $(LEVEL) | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/:---\1/")
else
	$(if $(wildcard $(RS_INSTALL_LOCATION)), tree -aL $(LEVEL) $(RS_INSTALL_LOCATION), $(QUIET)echo "No $(RS_INSTALL_LOCATION)")
endif


.DELETE_ON_ERROR:

.NOTPARALLEL:

VARS_EXCLUDES+=FILTER
